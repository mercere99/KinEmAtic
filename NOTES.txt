* Implement other shapes (circles, etc.)
* Change all in_var to just _var.
* Split up Kinetic.h into multiple files (especially for callbacks...)

Once we have a first draft of the basic framework:
* Refactor to parallel the object heirarchy of Kinetic for easier compatability.
* Come up with more intelligent default values
* Make sure copy constructors work properly, and encourage the use of template objects
* Setup EventChain base class to allow for different types of objects triggering each other.
  The should include Tween, Animation, and Callback (or at least CallbackChain, since Callback should be lightweight)
  Links should include .Then(next) and .With(sametime)  (should work in both directions!)
  Tween onFinish http://www.html5canvastutorials.com/kineticjs/html5-canvas-transition-callback-with-kineticjs/
* Most set methods should return the class object so that they can be chained.
* Clean up accessor locations to make sure they're on the lowest levels possible.
* Build a library of canvas shapes (lattice, arrow, etc.) to easily plug into things like button images.

Several new classes to incorporate:
* A font class that handles font family, size, color, etc.
* A coordinates class.
* A Control class that allows for dynamic creation of objects with easy relationships to track.
  (and perhaps maintained through size changes?)

Optimizations / improvements:
* Grid class would be faster if it only did updates rather than full redraws with every change.
* When we pass back an object from JS, can we just plug in the memory block rather than copying it?
* Setting "canvas.mozOpaque = true;" will cause layers to be opaque but crisper text in Firefox.
* Similarly, adding 0.5 to coordinate values is supposed to make lines crisper...

Cleanup:
* Setup a map<string, emkJSCallback *> to keep track of "On" callbacks and replace them properly (i.e., deleting the
  older ones) when needed.
* Merge images back into main array of kinetic objects so that GetX, GetWidth, etc. work.


Stack Overflow Questions
* Tween onReverseFinish, for linking two tweens together in reverse?
  http://stackoverflow.com/questions/19192600/tween-onstart-function-issue-kineticjs
* Can a Tween be changed once it is created, or do I need to create a new one?


Other libraries to think about:
d3.js
Processing.js
http://fastly.github.io/epoch/


Possible names:
Emote - short enough for a proper namespace
Emu - Nice and short, relates to gnu, but sounds too much like emulation.
Empirical - Brings in science aspect, but long name (probably emp:: namesapce?) (or just call it Pirical?)
Evoke - Steps out of em- prefix, but that's okay.  But the name is probably better for EALib
Embassy - I like how it makes clear that it's linking two places together, but long.
Emdemic or emsemble - made up words that highlight the linkages.

